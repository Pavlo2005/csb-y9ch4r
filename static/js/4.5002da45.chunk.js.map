{"version":3,"sources":["components/Task/Task.module.css","components/TaskList/TaskList.module.css","components/TaskEditor/TaskEditor.module.css","components/Task/Task.js","redux/tasks/selectors.js","components/TaskList/TaskList.js","components/TaskEditor/TaskEditor.js","pages/Tasks.js"],"names":["module","exports","Task","_ref","id","text","dispatch","useDispatch","_jsxs","className","css","wrapper","children","_jsx","type","button","onClick","handleDelete","deleteTask","selectLoading","state","tasks","loading","selectAllTasks","items","TaskList","useSelector","list","map","TaskEditor","form","onSubmit","e","preventDefault","currentTarget","elements","value","addTask","reset","alert","name","input","Tasks","isLoading","useEffect","fetchTasks","_Fragment","Helmet"],"mappings":"wJACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,OAAS,qB,qBCArFD,EAAOC,QAAU,CAAC,KAAO,uB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,OAAS,2B,4ICGtF,MAAMC,EAAOC,IAAmB,IAAlB,GAAEC,EAAE,KAAEC,GAAMF,EAC/B,MAAMG,EAAWC,cAGjB,OACEC,eAAA,OAAKC,UAAWC,IAAIC,QAAQC,SAAA,CAC1BC,cAAA,KAAGJ,UAAWC,IAAIL,KAAKO,SAAEP,IACzBQ,cAAA,UAAQC,KAAK,SAASL,UAAWC,IAAIK,OAAQC,QAL5BC,IAAMX,EAASY,YAAWd,IAKwBQ,SAAC,aAGhE,ECdGO,EAAgBC,GAASA,EAAMC,MAAMC,QAIrCC,EAAiBH,GAASA,EAAMC,MAAMG,M,qBCC5C,MAAMC,EAAWA,KACtB,MAAMJ,EAAQK,YAAYH,GAE1B,OACEV,cAAA,MAAIJ,UAAWC,IAAIiB,KAAKf,SACrBS,EAAMO,KAAIzB,IAAA,IAAC,GAAEC,EAAE,KAAEC,GAAMF,EAAA,OACtBU,cAAA,MAAAD,SACEC,cAACX,EAAI,CAACE,GAAIA,EAAIC,KAAMA,KADbD,EAEJ,KAEJ,E,qBCXF,MAAMyB,EAAaA,KACxB,MAAMvB,EAAWC,cAcjB,OACEC,eAAA,QAAMC,UAAWC,IAAIoB,KAAMC,SAbRC,IACnBA,EAAEC,iBACF,MAAMH,EAAOE,EAAEE,cACT7B,EAAOyB,EAAKK,SAAS9B,KAAK+B,MAChC,GAAa,KAAT/B,EAGF,OAFAC,EAAS+B,YAAQhC,SACjByB,EAAKQ,QAGPC,MAAM,yCAAyC,EAIG3B,SAAA,CAChDC,cAAA,SAAO2B,KAAK,OAAO/B,UAAWC,IAAI+B,QAClC5B,cAAA,UAAQC,KAAK,SAASL,UAAWC,IAAIK,OAAOH,SAAC,eAGxC,ECjBI,SAAS8B,IACtB,MAAMpC,EAAWC,cACXoC,EAAYjB,YAAYP,GAM9B,OAJAyB,qBAAU,KACRtC,EAASuC,cAAa,GACrB,CAACvC,IAGFE,eAAAsC,WAAA,CAAAlC,SAAA,CACEC,cAACkC,IAAM,CAAAnC,SACLC,cAAA,SAAAD,SAAO,iBAETC,cAACgB,EAAU,IACXhB,cAAA,OAAAD,SAAM+B,GAAa,2BACnB9B,cAACY,EAAQ,MAGf,C","file":"static/js/4.5002da45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__1Un4J\",\"text\":\"Task_text__7szr-\",\"button\":\"Task_button__3pPk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__2xVr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskEditor_form__2xrrE\",\"input\":\"TaskEditor_input__tR2ob\",\"button\":\"TaskEditor_button__nCK47\"};","import { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/operations';\nimport css from './Task.module.css';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{text}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <ul className={css.list}>\n      {tasks.map(({ id, text }) => (\n        <li key={id}>\n          <Task id={id} text={text} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport css from './TaskEditor.module.css';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addTask(text));\n      form.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input name=\"text\" className={css.input} />\n      <button type=\"submit\" className={css.button}>\n        Add task\n      </button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </>\n  );\n}\n"],"sourceRoot":""}